version: '3.8'

services:
  postgres:
    image: postgres:13
    container_name: assistpericias_postgres
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    restart: always
    networks:
      - assistpericias-network

  redis:
    image: redis:alpine
    container_name: assistpericias_redis
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - ./data/redis:/data
    restart: always
    networks:
      - assistpericias-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: assistpericias_backend
    volumes:
      - ./backend:/app
      - ./data/uploads:/app/uploads
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      - REDIS_URL=redis://:${REDIS_PASSWORD}@redis:6379/0
      - SECRET_KEY=${SECRET_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    depends_on:
      - postgres
      - redis
    restart: always
    networks:
      - assistpericias-network

  ai-service:
    build:
      context: ./ai-service
      dockerfile: Dockerfile
    container_name: assistpericias_ai
    volumes:
      - ./ai-service:/app
      - ./data/models:/app/models
    environment:
      - Z3_PATH=${Z3_PATH}
      - REDIS_URL=redis://:${REDIS_PASSWORD}@redis:6379/1
      - MODEL_VERSION=${MODEL_VERSION}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    depends_on:
      - redis
    restart: always
    networks:
      - assistpericias-network

  oscar:
    build:
      context: ./oscar
      dockerfile: Dockerfile
    container_name: assistpericias_oscar
    volumes:
      - ./oscar:/app
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - BACKEND_URL=http://backend:8000
      - AI_SERVICE_URL=http://ai-service:5000
      - REDIS_URL=redis://:${REDIS_PASSWORD}@redis:6379/2
    depends_on:
      - backend
      - ai-service
    restart: always
    networks:
      - assistpericias-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: assistpericias_frontend
    volumes:
      - ./frontend:/app
    restart: always
    networks:
      - assistpericias-network

  nginx:
    image: nginx:alpine
    container_name: assistpericias_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl
      - ./nginx/www:/var/www/html
      - ./data/uploads:/var/www/uploads
      - ./certificates:/etc/letsencrypt
    depends_on:
      - backend
      - frontend
      - oscar
      - ai-service
    restart: always
    networks:
      - assistpericias-network

networks:
  assistpericias-network:
    driver: bridge
